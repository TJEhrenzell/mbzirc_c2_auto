<?xml version="1.0"?>
<launch>
  <param name="node_logging" value="DEBUG"/>
  <param name="sm_version" value="old"/>
  <param name="physical_robot" value="true"/>
  <!-- VTREX LAUNCH-->
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node_left_motors">
    <param name="port" value="/dev/ttyACM0"/>
  </node>
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node_right_motors">
    <param name="port" value="/dev/ttyACM1"/>
  </node>
  <node pkg="tele_controller" type="odom_pub_node" name="odom_pub_node"/>
  <include file="$(find vtrex_description)/launch/description.launch"/>

  <include file="$(find swiftnav_piksi)/launch/swiftnav_piksi.launch"/>

  <!--node pkg="robot_localization" type="ukf_localization_node" name="ekf_se" clear_params="true" >
    <rosparam command="load" file="$(find vtrex_control)/config/vtrex_ekf.yaml" />
  </node-->

  <!-- ARM LAUNCH -->

  <rosparam file="$(find vtrex_ur5_moveit)/config/controllers.yaml"/>
  <include file="$(find mbzirc_c2_auto)/launch/ur5.launch" />
  <include file="$(find vtrex_ur5_moveit)/launch/vtrex_ur5_planning_execution.launch">
    <arg name="physical_robot" value="true"/>
  </include>
  <node name="move_arm_topic" pkg="mbzirc_c2_auto" type="move_arm_topic_phys.py"/>
  <node name="arm_kalman" pkg="mbzirc_c2_auto" type="arm_kalman_move.py"/>

  <node pkg="microstrain_3dmgx2_imu" type="imu_node" name="imu_node">
    <param name="time_offset" value="-0.040" />
    <param name="port"  type="string" value="/dev/ttyUSB0" />
    <param name="autostart" type="bool" value="true" />
    <param name="frameid"  type="string" value="imu" />
    <param name="autocalibrate" type="bool" value="true" />
    <param name="angular_velocity_stdev" type="double" value="0.00017" />
  </node>


  <!-- ACCESSORIES LAUNCH -->

  <include file="$(find mbzirc_c2_auto)/launch/velodyne.launch" >
    <arg name="min_z" value="0.0"/>
    <arg name="max_z" value="5.0"/>
  </include>
  <include file="$(find mbzirc_c2_auto)/launch/gmapping.launch" />
  <include file="$(find mbzirc_c2_auto)/launch/move_base.launch">
    <arg name="no_static_map" value="true"/>
    <arg name="oscillation_timeout" value="0.0"/>
  </include>
  <include file="$(find mbzirc_c2_auto)/launch/usb_cam-test.launch" />
  <node name="gripper_controller" pkg="rosserial_python" type="serial_node.py">
    <param name="port" value="/dev/ttyUSB1"/>
  </node>
  <!-- node name="fake_lidar" pkg="mbzirc_c2_auto" type="fake_lidar.py"/-->

  <node name="read_odom" pkg="map_reader" type="read_odom.py"/>
  <node name="findbox_2d_vel" pkg="mbzirc_c2_auto" type="findbox_2d_vel.py"/>


  <!-- STATE MACHINE LAUNCH -->

  <!--node
    name="state_machine"
    pkg="mbzirc_c2_state"
    type="mbzirc_ch2_sm.py"
    args="normal"
    output='screen'
  />
  <node name="state_viewer" pkg="smach_viewer" type="smach_viewer.py" output='screen'/-->

  <!-- VISUALIZATION LAUNCH -->

  <include file="$(find mbzirc_c2_auto)/launch/view_robot.launch" />
<!--node name="image_view" pkg="image_view" type="image_view">
  <remap from="image" to="/usb_cam/image_raw"/>
</node -->


  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" >
    <rosparam command="load" file="$(find vtrex_control)/config/localization.yaml" />
  </node>
</launch>
